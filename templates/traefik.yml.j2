version: '3.3'
networks:
  traefik:
    external:
      name: "{{ traefik_network }}"
services:
  app:
    image: "{{ composes.traefik.images.app }}"
    command:
      - "--entrypoints.http.address=:{{ composes.traefik.ports.http.container }}"
      - "--entrypoints.https.address=:{{ composes.traefik.ports.https.container }}"
{% if composes.traefik.provider_file is defined %}
      - "--providers.file=true"
      - "--providers.file.filename={{ composes.traefik.mounts.app.container }}/{{ composes.traefik.provider_file }}"
{% else %}
      - --providers.docker
      - --providers.docker.exposedByDefault=false
{% endif %}
      - --api
      - "--certificatesresolvers.letsencrypt.acme.email={{ composes.traefik.le_email }}"
      - --certificatesresolvers.letsencrypt.acme.dnsChallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=digitalocean
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers={{ composes.traefik.resolver1 }},{{ composes.traefik.resolver2 }}"
      - --certificatesresolvers.letsencrypt.acme.storage={{ composes.traefik.mounts.app.container }}/acme.json
      - --log.level=debug
    ports:
      #- "{{ composes.traefik.ports.http.host }}:{{ composes.traefik.ports.http.container }}"
      - "{{ composes.traefik.ports.https.host }}:{{ composes.traefik.ports.https.container }}"
    networks:
      - traefik
    volumes:
{% if composes.traefik.provider_file is not defined %}
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
{% endif %}
      - "{{ composes.traefik.mounts.app.local }}/{{ ansible_host }}:{{ composes.traefik.mounts.app.container }}{{ composes.traefik.selinux | default('') }}"
{% if composes.traefik.selinux is defined %}
    privileged: true
{% endif %}
    environment:
      - "DO_AUTH_TOKEN={{ composes.traefik.do_token }}"
    restart: unless-stopped
